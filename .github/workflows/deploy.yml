name: Deploy Docker to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout do código
    - name: Checkout code
      uses: actions/checkout@v3

    # Login no Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build da imagem Docker
    - name: Build Docker Image
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        NEXT_PUBLIC_OPENAI_API_KEY: ${{ secrets.NEXT_PUBLIC_OPENAI_API_KEY }}
        NEXT_PUBLIC_OPENAI_ASSISTANT_ID: ${{ secrets.NEXT_PUBLIC_OPENAI_ASSISTANT_ID }}
        NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
      run: |
        docker build \
          --build-arg NEXT_PUBLIC_FIREBASE_API_KEY=$NEXT_PUBLIC_FIREBASE_API_KEY \
          --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN \
          --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID=$NEXT_PUBLIC_FIREBASE_PROJECT_ID \
          --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=$NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET \
          --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID \
          --build-arg NEXT_PUBLIC_FIREBASE_APP_ID=$NEXT_PUBLIC_FIREBASE_APP_ID \
          --build-arg NEXT_PUBLIC_OPENAI_API_KEY=$NEXT_PUBLIC_OPENAI_API_KEY \
          --build-arg NEXT_PUBLIC_OPENAI_ASSISTANT_ID=$NEXT_PUBLIC_OPENAI_ASSISTANT_ID \
          --build-arg NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=$NEXT_PUBLIC_GOOGLE_MAPS_API_KEY \
          -t lucaslimabaseo/mao-amiga-deploy:latest .

    # Push da imagem para o Docker Hub
    - name: Push Docker Image to Docker Hub
      run: |
        docker push lucaslimabaseo/mao-amiga-deploy:latest 

    # Deploy para VPS
    - name: Deploy to VPS
      env:
        HOST: ${{ secrets.VPS_HOST }}
        USER: ${{ secrets.VPS_USER }}
        PASSWORD: ${{ secrets.VPS_PASSWORD }}
      run: |
        # Conectar na VPS e realizar as ações de deploy
        sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
          # Fazer logout e login no Docker Hub na VPS
          docker logout
          docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

          # Parar e remover o container antigo
          docker stop mao-amiga-deploy || true
          docker rm mao-amiga-deploy || true

          # Remover imagens antigas para liberar espaço
          docker rmi lucaslimabaseo/mao-amiga-deploy:latest || true

          # Fazer pull da nova imagem
          docker pull lucaslimabaseo/mao-amiga-deploy:latest 

          # Rodar a nova imagem
          docker run -d --name mao-amiga-deploy -p 3000:3000 lucaslimabaseo/mao-amiga-deploy:latest
        EOF